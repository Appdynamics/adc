application:
  title: Application Model API
  description: The applications API lets you retrieve information about the monitored environment as modeled in AppDynamics.
  get:
    title: Get an application.
    description: Provide application id or name as parameter (-a).
    example: -a 15
    method: GET
    endpoint: /controller/rest/applications/{{a}}
  list:
    title: List all applications available on the controller
    description: This command requires no further arguments.
    example:
    method: GET
    endpoint: /controller/rest/applications
  create:
    title: Create a new application.
    description: Provide a name and a type (APM or WEB) as parameter.
    example: -t APM -n MyNewApplication
    method: POST
    endpoint: /controller/restui/allApplications/createApplication?applicationType={{t}}
    payload: {\"name\": \"{{n}}\", \"description\": \"\"}
  delete:
    title: Delete an application.
    description: Provide an application id as parameter (-a)
    example: -a 29
    method: POST
    endpoint: /controller/restui/allApplications/deleteApplication
    payload: {{a}}
  export:
    title: Export an application from the controller.
    description: Provide an application id as parameter (-a)
    example: -a 29
    method: GET
    endpoint: /controller/ConfigObjectImportExportServlet?applicationId={{a}}
actiontemplate:
  title: Action Templates
  description: These commands allow you to import and export email/http action templates. A common use pattern is exporting the commands from one controller and importing into another. Please note that the export is a list of templates and the import expects a single object, so you need to split the json inbetween.
  createmediatype:
    title: Create a custom media type.
    description: Provide the name of the media type as parameter (-n)
    example: -n 'application/vnd.appd.events+json'
    method: POST
    endpoint: /controller/restui/httpaction/createHttpRequestActionMediaType
    payload: {"name":"{{n}}","builtIn":false}
  export:
    title: Export all templates of a given type.
    description: Provide the type (-t email or httprequest) as parameter.
    example: -t httprequest
    method: GET
    endpoint: /controller/actiontemplate/{{t}}/
bt:
  title: Business Transactions in a Business Application
  description: Retrieve information about business transactions within a given business application
  get:
    title: Get a BT.
    description: Provide as parameters bt id (-b) and application id (-a).
    example: -a 29 -b 13
    method: GET
    endpoint: /controller/rest/applications/{{a}}/business-transactions/{{b}}
  list:
    title: List all BTs for a given application.
    description: Provide the application id as parameter (-a)
    example: -a 29
    method: GET
    endpoint: /controller/rest/applications/{{a}}/business-transactions
  delete:
    title: Delete a business transaction.
    description: Provide the bt id as parameter (-b)
    example: -b 13
    method: POST
    endpoint: /controller/restui/bt/deleteBTs
    payload: [{{b}}]
  rename:
    title: Rename a business transaction.
    description: Provide the bt id (-b) and the new name (-n) as parameters
    example: -b 13 -n Checkout
    method: POST
    endpoint: /controller/restui/bt/renameBT?id={{b}}
    payload: {{n}}
  creategroup:
    title: Create a business transactions group.
    description: Provide the application id (-a), name (-n) and a comma separeted list of bt ids (-b)
    example: -b 13,14 -n MyGroup
    method: POST
    endpoint: /controller/restui/bt/createBusinessTransactionGroup?applicationId={{a}}&groupName={{n}}
    payload: [{{b}}]
configuration:
  title: Configuration API
  description: The configuration API enables you read and modify selected Controller configuration settings programmatically.
  get:
    title: Retrieve a Controller Setting by Name.
    description: Provide a name (-n) as parameter.
    example: -n metrics.min.retention.period
    method: GET
    endpoint: /controller/rest/configuration?name={{n}}
  list:
    title: Retrieve All Controller Settings
    description: The Controller global configuration values are made up of the Controller settings that are presented in the Administration Console.
    example:
    method: GET
    endpoint: /controller/rest/configuration
  set:
    title: Set a Controller setting to a specified value.
    description: Set a Controller setting to a specified value. Provide a name (-n) and a value (-v) as parameters
    example: -n metrics.min.retention.period -v 550
    method: POST
    endpoint: /controller/rest/configuration?name={{n}}&value={{v}}
controller:
  title: Controller Calls
  description: Basic calls against an AppDynamics controller.
  auth:
    title: Authenticate
    description: Authenticate with an AppDynamics controller
    example:
    method: GET
    endpoint: /controller/auth?action=login
snapshot:
  title: Snapshot API
  description: Retrieve APM snapshots
  list:
    title: Retrieve a list of snapshots
    description: Provide an application (-a) as parameter, as well es a time range (-t), the duration in minutes (-d) or start (-b) and end time (-f)
    example: -a 29 -t BEFORE_NOW -d 120
    method: GET
    endpoint: /controller/rest/applications/{{a}}/request-snapshots?time-range-type={{t}}&duration-in-mins={{d?}}&start-time={{b?}}&end-time={{f?}}
tier:
  title: Tiers
  description: Retrieve tiers within a business application
  list:
    title: List all tiers for a given application.
    description: Provide the application id as parameter (-a).
    example: -a 29
    method: GET
    endpoint: /controller/rest/applications/{{a}}/tiers
  get:
    title: Retrieve Tier Information by Tier Name
    description: Provide the application (-a) and the tier (-t) as parameters
    example: -a 29 -t 45
    method: GET
    endpoint: /controller/rest/applications/{{a}}/tiers/{{t}}
  nodes:
    title: Retrieve Node Information for All Nodes in a Tier
    description: Provide the application (-a) and the tier (-t) as parameters
    example: -a 29 -t 45
    method: GET
    endpoint: /controller/rest/applications/{{a}}/tiers/{{t}}/nodes
